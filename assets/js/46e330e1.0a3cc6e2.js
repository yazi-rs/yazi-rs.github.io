"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1810],{3063:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>h,contentTitle:()=>c,default:()=>m,frontMatter:()=>d,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"tips","title":"Tips","description":"A few helpful tips for using Yazi.","source":"@site/versioned_docs/version-25.5.31/tips.md","sourceDirName":".","slug":"/tips","permalink":"/docs/tips","draft":false,"unlisted":false,"editUrl":"https://github.com/yazi-rs/yazi-rs.github.io/edit/main/versioned_docs/version-25.5.31/tips.md","tags":[],"version":"25.5.31","sidebarPosition":9,"frontMatter":{"sidebar_position":9,"description":"A few helpful tips for using Yazi."},"sidebar":"docsSidebar","previous":{"title":"DDS","permalink":"/docs/dds"},"next":{"title":"Resources","permalink":"/docs/resources"}}');var r=i(6070),s=i(7082),a=i(4633),l=i(6211),o=i(8487);const d={sidebar_position:9,description:"A few helpful tips for using Yazi."},c="Tips",h={},u=[{value:"Full border",id:"full-border",level:2},{value:"Dropping to the shell",id:"dropping-to-shell",level:2},{value:"Close input by once <kbd>Esc</kbd> press",id:"close-input-by-esc",level:2},{value:"Smart enter: <code>open</code> files or <code>enter</code> directories all in one key",id:"smart-enter",level:2},{value:"Smart paste: <code>paste</code> files without entering the directory",id:"smart-paste",level:2},{value:"Smart tab: create a tab and enter the hovered directory",id:"smart-tab",level:2},{value:"Smart switch: create tab if the tab being switched to does not exist",id:"smart-switch",level:2},{value:"Folder-specific rules",id:"folder-rules",level:2},{value:"Folder-specific previewer and preloader",id:"folder-previewer",level:2},{value:"Drag and drop via <code>dragon</code>",id:"drag-and-drop",level:2},{value:"Set a wallpaper",id:"set-a-wallpaper",level:2},{value:"Linux: Copy selected files to the system clipboard while yanking",id:"selected-files-to-clipboard",level:2},{value:"<code>cd</code> back to the root of the current Git repository",id:"cd-to-git-root",level:2},{value:"Unix: Add subtitle to the running MPV",id:"mpv-subtitle",level:2},{value:"Maximize preview pane",id:"max-preview",level:2},{value:"Hide preview pane",id:"hide-preview",level:2},{value:"Navigation in the parent directory without leaving the CWD",id:"parent-arrow",level:2},{value:"Confirm before quitting if multiple tabs are open",id:"confirm-quit",level:2},{value:"No status bar",id:"no-status-bar",level:2},{value:"Show symlink in status bar",id:"symlink-in-status",level:2},{value:"Show user/group of files in status bar",id:"user-group-in-status",level:2},{value:"Show username and hostname in header",id:"username-hostname-in-header",level:2},{value:"macOS: Preview files with the system Quick Look",id:"macos-quick-look",level:2},{value:"Specify a different editor for bulk renaming",id:"bulk-editor",level:2},{value:"Linux: Yazi as your system file chooser",id:"system-chooser",level:2},{value:"File tree picker in Helix with Zellij",id:"helix-with-zellij",level:2},{value:"File tree picker in Helix with tmux",id:"helix-with-tmux",level:2},{value:"Email selected files",id:"email-selected-files",level:2},{value:"Make Yazi even faster than fast",id:"make-yazi-even-faster",level:2}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components},{Details:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"tips",children:"Tips"})}),"\n",(0,r.jsx)(n.p,{children:"These tips require prior knowledge of the Yazi configuration file."}),"\n",(0,r.jsxs)(n.p,{children:["If you are using Yazi for the first time, please read our ",(0,r.jsx)(n.a,{href:"/docs/configuration/overview",children:"configuration"})," and ",(0,r.jsx)(n.a,{href:"/docs/plugins/overview",children:"plugins"})," documentation first."]}),"\n",(0,r.jsx)(n.h2,{id:"full-border",children:"Full border"}),"\n",(0,r.jsx)("img",{src:(0,o.Ay)("/webp/full-border.webp"),width:"600"}),"\n",(0,r.jsxs)(n.p,{children:["Moved to: ",(0,r.jsx)(n.a,{href:"https://github.com/yazi-rs/plugins/tree/main/full-border.yazi",children:"https://github.com/yazi-rs/plugins/tree/main/full-border.yazi"})]}),"\n",(0,r.jsx)(n.h2,{id:"dropping-to-shell",children:"Dropping to the shell"}),"\n",(0,r.jsxs)(n.p,{children:["Add this keybinding to your ",(0,r.jsx)(n.code,{children:"keymap.toml"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'[[mgr.prepend_keymap]]\non   = "!"\nfor  = "unix"\nrun  = \'shell "$SHELL" --block\'\ndesc = "Open $SHELL here"\n\n# If you also using Yazi on Windows:\n[[mgr.prepend_keymap]]\non   = "!"\nfor  = "windows"\nrun  = \'shell "powershell.exe" --block\'\ndesc = "Open PowerShell here"\n'})}),"\n",(0,r.jsxs)(n.h2,{id:"close-input-by-esc",children:["Close input by once ",(0,r.jsx)("kbd",{children:"Esc"})," press"]}),"\n",(0,r.jsxs)(n.p,{children:["You can change the ",(0,r.jsx)("kbd",{children:"Esc"})," of input component from the default ",(0,r.jsx)(n.code,{children:"escape"})," to ",(0,r.jsx)(n.code,{children:"close"})," command, in your ",(0,r.jsx)(n.code,{children:"keymap.toml"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'[[input.prepend_keymap]]\non   = "<Esc>"\nrun  = "close"\ndesc = "Cancel input"\n'})}),"\n",(0,r.jsx)(n.p,{children:"to exiting input directly, without entering Vi mode, making it behave like a regular input box."}),"\n",(0,r.jsxs)(n.h2,{id:"smart-enter",children:["Smart enter: ",(0,r.jsx)(n.code,{children:"open"})," files or ",(0,r.jsx)(n.code,{children:"enter"})," directories all in one key"]}),"\n",(0,r.jsxs)(n.p,{children:["Moved to: ",(0,r.jsx)(n.a,{href:"https://github.com/yazi-rs/plugins/tree/main/smart-enter.yazi",children:"https://github.com/yazi-rs/plugins/tree/main/smart-enter.yazi"})]}),"\n",(0,r.jsxs)(n.h2,{id:"smart-paste",children:["Smart paste: ",(0,r.jsx)(n.code,{children:"paste"})," files without entering the directory"]}),"\n",(0,r.jsxs)(n.p,{children:["Moved to: ",(0,r.jsx)(n.a,{href:"https://github.com/yazi-rs/plugins/tree/main/smart-paste.yazi",children:"https://github.com/yazi-rs/plugins/tree/main/smart-paste.yazi"})]}),"\n",(0,r.jsx)(n.h2,{id:"smart-tab",children:"Smart tab: create a tab and enter the hovered directory"}),"\n",(0,r.jsxs)(n.p,{children:["Save these lines as ",(0,r.jsx)(n.code,{children:"~/.config/yazi/plugins/smart-tab.yazi/main.lua"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'--- @sync entry\nreturn {\n\tentry = function()\n\t\tlocal h = cx.active.current.hovered\n\t\tya.emit("tab_create", h and h.cha.is_dir and { h.url } or { current = true })\n\tend,\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Then bind it to the ",(0,r.jsx)("kbd",{children:"t"})," key, in your ",(0,r.jsx)(n.code,{children:"keymap.toml"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'[[mgr.prepend_keymap]]\non   = "t"\nrun  = "plugin smart-tab"\ndesc = "Create a tab and enter the hovered directory"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"smart-switch",children:"Smart switch: create tab if the tab being switched to does not exist"}),"\n",(0,r.jsxs)(n.p,{children:["Save these lines as ",(0,r.jsx)(n.code,{children:"~/.config/yazi/plugins/smart-switch.yazi/main.lua"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'--- @sync entry\nlocal function entry(_, job)\n\tlocal cur = cx.active.current\n\tfor _ = #cx.tabs, job.args[1] do\n\t\tya.emit("tab_create", { cur.cwd })\n\t\tif cur.hovered then\n\t\t\tya.emit("reveal", { cur.hovered.url })\n\t\tend\n\tend\n\tya.emit("tab_switch", { job.args[1] })\nend\n\nreturn { entry = entry }\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Then bind it to the ",(0,r.jsx)("kbd",{children:"2"})," key, in your ",(0,r.jsx)(n.code,{children:"keymap.toml"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'[[mgr.prepend_keymap]]\non   = "2"\nrun  = "plugin smart-switch 1"\ndesc = "Switch or create tab 2"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"folder-rules",children:"Folder-specific rules"}),"\n",(0,r.jsxs)(n.p,{children:["You can subscribe to directory change events through the ",(0,r.jsxs)(n.a,{href:"/docs/dds#cd",children:[(0,r.jsx)(n.code,{children:"cd"})," event provided by DDS"]}),", and then do any action you want, such as setting different sorting methods for specific directories."]}),"\n",(0,r.jsxs)(n.p,{children:["The following code demonstrates making the ",(0,r.jsx)(n.code,{children:"Downloads"})," directory to sort by modification time, while others are sorted alphabetically. Save these lines as ",(0,r.jsx)(n.code,{children:"~/.config/yazi/plugins/folder-rules.yazi/main.lua"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local function setup()\n\tps.sub("cd", function()\n\t\tlocal cwd = cx.active.current.cwd\n\t\tif cwd:ends_with("Downloads") then\n\t\t\tya.emit("sort", { "mtime", reverse = true, dir_first = false })\n\t\telse\n\t\t\tya.emit("sort", { "alphabetical", reverse = false, dir_first = true })\n\t\tend\n\tend)\nend\n\nreturn { setup = setup }\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Then enable it in your ",(0,r.jsx)(n.code,{children:"~/.config/yazi/init.lua"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'require("folder-rules"):setup()\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Credits to ",(0,r.jsx)(n.a,{href:"https://github.com/sxyazi/yazi/issues/623#issuecomment-2096270843",children:"@tianze0926 for sharing it"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"folder-previewer",children:"Folder-specific previewer and preloader"}),"\n",(0,r.jsxs)(n.p,{children:["In addition to the ",(0,r.jsx)(n.code,{children:"mime"})," rules, Yazi also has ",(0,r.jsx)(n.code,{children:"name"})," rules for pre{viewer,loader}, which accept a glob expression.\nThis allows for flexible creation of different pre{viewer,loader} rules for various directories."]}),"\n",(0,r.jsxs)(n.p,{children:["For example, you can use the ",(0,r.jsx)(n.code,{children:"noop"})," builtin preloader for a remote mount point like ",(0,r.jsx)(n.code,{children:"/remote"}),", disabling preloads in that directory:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'# yazi.toml\n[[plugin.prepend_preloaders]]\nname = "/remote/**"\nrun  = "noop"\n'})}),"\n",(0,r.jsx)(n.p,{children:"If you want to disable all the preset previewers, preloaders:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:"# yazi.toml\n[plugin]\npreloaders = []\npreviewers = []\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"drag-and-drop",children:["Drag and drop via ",(0,r.jsx)(n.a,{href:"https://github.com/mwh/dragon",children:(0,r.jsx)(n.code,{children:"dragon"})})]}),"\n",(0,r.jsxs)(n.p,{children:["Original post: ",(0,r.jsx)(n.a,{href:"https://github.com/sxyazi/yazi/discussions/327",children:"https://github.com/sxyazi/yazi/discussions/327"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'[[mgr.prepend_keymap]]\non  = "<C-n>"\nrun = \'shell -- dragon -x -i -T "$0"\'\n'})}),"\n",(0,r.jsx)(n.h2,{id:"set-a-wallpaper",children:"Set a wallpaper"}),"\n",(0,r.jsxs)(n.p,{children:['To set a wallpaper with the "Open with" menu (',(0,r.jsx)("kbd",{children:"O"})," key by default), add a ",(0,r.jsx)(n.code,{children:"set-wallpaper"})," opener in your ",(0,r.jsx)(n.code,{children:"yazi.toml"})," by choosing the appropriate command for your desktop environment:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'# Linux: Hyprland + Hyprpaper\n[[opener.set-wallpaper]]\nrun  = \'hyprctl hyprpaper reload ,"$1"\'\nfor  = "linux"\ndesc = "Set as wallpaper"\n\n# Linux: Swaybg\n[[opener.set-wallpaper]]\nrun  = \'killall swaybg; swaybg -m fill -i "$1"\'\nfor  = "linux"\ndesc = "Set as wallpaper"\norphan = true\n\n# macOS\n[[opener.set-wallpaper]]\nrun = \'\'\'\n\tosascript -e \'on run {img}\' -e \'tell application "System Events" to set picture of every desktop to img\' -e \'end run\' "$1"\n\'\'\'\nfor  = "macos"\ndesc = "Set as wallpaper"\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Then apply the ",(0,r.jsx)(n.code,{children:"set-wallpaper"})," opener to the image files:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'# yazi.toml\n[[open.prepend_rules]]\nmime = "image/*"\nuse  = [ "set-wallpaper", "open" ]\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Alternatively, you can also change the wallpaper with a keybinding, for example ",(0,r.jsx)("kbd",{children:"Ctrl"})," + ",(0,r.jsx)("kbd",{children:"w"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'# keymap.toml\n[[mgr.prepend_keymap]]\non   = "<C-w>"\nfor  = "linux"\nrun  = \'shell -- hyprctl hyprpaper reload ,"$0"\'\ndesc = "Set hovered file as wallpaper"\n'})}),"\n",(0,r.jsx)(n.p,{children:"The above example is for Hyprland + Hyprpaper, adapt to the command of your respective DE as needed."}),"\n",(0,r.jsx)(n.h2,{id:"selected-files-to-clipboard",children:"Linux: Copy selected files to the system clipboard while yanking"}),"\n",(0,r.jsxs)(n.p,{children:["Yazi allows multiple commands to be bound to a single key, so you can set ",(0,r.jsx)("kbd",{children:"y"})," to not only do the ",(0,r.jsx)(n.code,{children:"yank"})," but also run a shell script:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'[[mgr.prepend_keymap]]\non  = "y"\nrun = [ \'shell -- echo "$@" | xclip -i -selection clipboard -t text/uri-list\', "yank" ]\n'})}),"\n",(0,r.jsxs)(n.p,{children:["The above is available on X11, there is also a Wayland version (Thanks ",(0,r.jsx)(n.a,{href:"https://discord.com/channels/1136203602898194542/1136203604076802092/1188498323867455619",children:"@hurutparittya for sharing this"})," in Yazi's discord server):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'[[mgr.prepend_keymap]]\non  = "y"\nrun = [ \'shell -- for path in "$@"; do echo "file://$path"; done | wl-copy -t text/uri-list\', "yank" ]\n'})}),"\n",(0,r.jsxs)(n.h2,{id:"cd-to-git-root",children:[(0,r.jsx)(n.code,{children:"cd"})," back to the root of the current Git repository"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'[[mgr.prepend_keymap]]\non = [ "g", "r" ]\nrun = \'shell -- ya emit cd "$(git rev-parse --show-toplevel)"\'\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Credits to ",(0,r.jsx)(n.a,{href:"https://t.me/yazi_rs/3325/15373",children:"@aidanzhai for sharing it"})," in Yazi's telegram group."]}),"\n",(0,r.jsx)(n.h2,{id:"mpv-subtitle",children:"Unix: Add subtitle to the running MPV"}),"\n",(0,r.jsxs)(n.p,{children:["Add these lines to your ",(0,r.jsx)(n.code,{children:"~/.config/yazi/yazi.toml"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'[[opener.add-sub]]\nrun  = \'\'\' echo sub-add "\'$1\'" | socat - /tmp/mpv.sock \'\'\'\ndesc = "Add sub to MPV"\n\n[[open.prepend_rules]]\nname = "*.{ass,srt,ssa,sty,sup,vtt}"\nuse  = [ "add-sub", "edit" ]\n'})}),"\n",(0,r.jsx)(n.p,{children:"To make it work, make sure you've:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Installed ",(0,r.jsx)(n.code,{children:"socat"})," and can be found in your ",(0,r.jsx)(n.code,{children:"$PATH"})]}),"\n",(0,r.jsxs)(n.li,{children:["Enabled and configured the ipc socket to ",(0,r.jsx)(n.code,{children:"/tmp/mpv.sock"}),", that is, include:","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"input-ipc-server=/tmp/mpv.sock\n"})}),"\n","in your ",(0,r.jsx)(n.code,{children:"~/.config/mpv/mpv.conf"}),". See ",(0,r.jsxs)(n.a,{href:"https://mpv.io/manual/stable/#options-input-ipc-server",children:["the documentation of ",(0,r.jsx)(n.code,{children:"--input-ipc-server"})]})," for more info."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"max-preview",children:"Maximize preview pane"}),"\n",(0,r.jsxs)(n.p,{children:["Moved to: ",(0,r.jsx)(n.a,{href:"https://github.com/yazi-rs/plugins/tree/main/toggle-pane.yazi",children:"https://github.com/yazi-rs/plugins/tree/main/toggle-pane.yazi"})]}),"\n",(0,r.jsx)(n.h2,{id:"hide-preview",children:"Hide preview pane"}),"\n",(0,r.jsxs)(n.p,{children:["Moved to: ",(0,r.jsx)(n.a,{href:"https://github.com/yazi-rs/plugins/tree/main/toggle-pane.yazi",children:"https://github.com/yazi-rs/plugins/tree/main/toggle-pane.yazi"})]}),"\n",(0,r.jsx)(n.h2,{id:"parent-arrow",children:"Navigation in the parent directory without leaving the CWD"}),"\n",(0,r.jsxs)(n.p,{children:["Save these lines as ",(0,r.jsx)(n.code,{children:"~/.config/yazi/plugins/parent-arrow.yazi/main.lua"}),":"]}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"classic",label:"Classic",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'--- @sync entry\nlocal function entry(_, job)\n\tlocal parent = cx.active.parent\n\tif not parent then return end\n\n\tlocal target = parent.files[parent.cursor + 1 + job.args[1]]\n\tif target and target.cha.is_dir then\n\t\tya.emit("cd", { target.url })\n\tend\nend\n\nreturn { entry = entry }\n'})})}),(0,r.jsx)(l.A,{value:"skip-files",label:"Skip files",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"--- @sync entry\nlocal function entry(_, job)\n\tlocal parent = cx.active.parent\n\tif not parent then return end\n\n\tlocal offset = tonumber(job.args[1])\n\tif not offset then return ya.err(job.args[1], 'is not a number') end\n\n\tlocal start = parent.cursor + 1 + offset\n\tlocal end_ = offset < 0 and 1 or #parent.files\n\tlocal step = offset < 0 and -1 or 1\n\tfor i = start, end_, step do\n\t\tlocal target = parent.files[i]\n\t\tif target and target.cha.is_dir then\n\t\t\treturn ya.emit(\"cd\", { target.url })\n\t\tend\n\tend\nend\n\nreturn { entry = entry }\n"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["Then bind it for ",(0,r.jsx)("kbd",{children:"K"})," and ",(0,r.jsx)("kbd",{children:"J"})," key, in your ",(0,r.jsx)(n.code,{children:"keymap.toml"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'[[mgr.prepend_keymap]]\non  = "K"\nrun = "plugin parent-arrow -1"\n\n[[mgr.prepend_keymap]]\non  = "J"\nrun = "plugin parent-arrow 1"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"confirm-quit",children:"Confirm before quitting if multiple tabs are open"}),"\n",(0,r.jsxs)(n.p,{children:["Save these lines as ",(0,r.jsx)(n.code,{children:"~/.config/yazi/plugins/confirm-quit.yazi/main.lua"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local count = ya.sync(function() return #cx.tabs end)\n\nlocal function entry()\n\tif count() < 2 then\n\t\treturn ya.emit("quit", {})\n\tend\n\n\tlocal yes = ya.confirm {\n\t\tpos = { "center", w = 60, h = 10 },\n\t\ttitle = "Quit?",\n\t\tcontent = ui.Text("There are multiple tabs open. Are you sure you want to quit?"):wrap(ui.Wrap.YES),\n\t}\n\tif yes then\n\t\tya.emit("quit", {})\n\tend\nend\n\nreturn { entry = entry }\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Next, bind it to the ",(0,r.jsx)("kbd",{children:"q"})," key in your ",(0,r.jsx)(n.code,{children:"keymap.toml"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'[[mgr.prepend_keymap]]\non  = "q"\nrun = "plugin confirm-quit"\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Credits to ",(0,r.jsx)(n.a,{href:"https://github.com/sxyazi/yazi/issues/2267#issuecomment-2624805134",children:"@lpnh for sharing it"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"no-status-bar",children:"No status bar"}),"\n",(0,r.jsx)("img",{src:(0,o.Ay)("/webp/no-status-bar.webp"),width:"600"}),"\n",(0,r.jsxs)(n.p,{children:["Moved to: ",(0,r.jsx)(n.a,{href:"https://github.com/yazi-rs/plugins/tree/main/no-status.yazi",children:"https://github.com/yazi-rs/plugins/tree/main/no-status.yazi"})]}),"\n",(0,r.jsx)(n.h2,{id:"symlink-in-status",children:"Show symlink in status bar"}),"\n",(0,r.jsx)("img",{src:(0,o.Ay)("/webp/symlink-in-status.webp"),width:"600"}),"\n",(0,r.jsxs)(n.p,{children:["Add the following code to your ",(0,r.jsx)(n.code,{children:"~/.config/yazi/init.lua"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Status:children_add(function(self)\n\tlocal h = self._current.hovered\n\tif h and h.link_to then\n\t\treturn " -> " .. tostring(h.link_to)\n\telse\n\t\treturn ""\n\tend\nend, 3300, Status.LEFT)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"user-group-in-status",children:"Show user/group of files in status bar"}),"\n",(0,r.jsx)("img",{src:(0,o.Ay)("/webp/owner.webp"),width:"600"}),"\n",(0,r.jsxs)(n.p,{children:["Add the following code to your ",(0,r.jsx)(n.code,{children:"~/.config/yazi/init.lua"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Status:children_add(function()\n\tlocal h = cx.active.current.hovered\n\tif not h or ya.target_family() ~= "unix" then\n\t\treturn ""\n\tend\n\n\treturn ui.Line {\n\t\tui.Span(ya.user_name(h.cha.uid) or tostring(h.cha.uid)):fg("magenta"),\n\t\t":",\n\t\tui.Span(ya.group_name(h.cha.gid) or tostring(h.cha.gid)):fg("magenta"),\n\t\t" ",\n\t}\nend, 500, Status.RIGHT)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"username-hostname-in-header",children:"Show username and hostname in header"}),"\n",(0,r.jsx)("img",{src:(0,o.Ay)("/webp/hostname-in-header.webp"),width:"600"}),"\n",(0,r.jsxs)(n.p,{children:["Add the following code to your ",(0,r.jsx)(n.code,{children:"~/.config/yazi/init.lua"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Header:children_add(function()\n\tif ya.target_family() ~= "unix" then\n\t\treturn ""\n\tend\n\treturn ui.Span(ya.user_name() .. "@" .. ya.host_name() .. ":"):fg("blue")\nend, 500, Header.LEFT)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"macos-quick-look",children:"macOS: Preview files with the system Quick Look"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'[[mgr.prepend_keymap]]\non = "<C-p>"\nrun = \'shell -- qlmanage -p "$@"\'\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Credits to ",(0,r.jsx)(n.a,{href:"https://discord.com/channels/1136203602898194542/1146658361740369960/1293471643959558156",children:"@UncleGravity for sharing it"})," in Yazi's discord server."]}),"\n",(0,r.jsx)(n.h2,{id:"bulk-editor",children:"Specify a different editor for bulk renaming"}),"\n",(0,r.jsxs)(n.p,{children:["For bulk renaming, Yazi finds the first matching opener in your ",(0,r.jsx)(n.a,{href:"/docs/configuration/yazi#open",children:(0,r.jsx)(n.code,{children:"[open]"})})," rules with:"]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{}),(0,r.jsx)(n.th,{children:"Value"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"block"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"true"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"name"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'"bulk-rename.txt"'})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"mime"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'"text/plain"'})})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"to use as the editor for editing the file list."}),"\n",(0,r.jsx)(n.p,{children:"By default, this matches your editor used for opening normal text files, if you want to use an editor different from that:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'# ~/.config/yazi/yazi.toml\n[[opener.bulk-rename]]\nrun   = \'hx "$@"\'\nblock = true\n\n[[open.prepend_rules]]\nname = "bulk-rename.txt"\nuse  = "bulk-rename"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"system-chooser",children:"Linux: Yazi as your system file chooser"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"xdg-desktop-portal-termfilechooser"})," backend lets you replace the default file picker with Yazi, providing seamless integration with applications, such as Firefox."]}),"\n",(0,r.jsxs)(n.p,{children:["For installation steps, refer to the ",(0,r.jsx)(n.a,{href:"https://github.com/hunkyburrito/xdg-desktop-portal-termfilechooser?tab=readme-ov-file#installation",children:"installation guide"})," and additional instructions available there."]}),"\n",(0,r.jsx)(n.h2,{id:"helix-with-zellij",children:"File tree picker in Helix with Zellij"}),"\n",(0,r.jsx)(n.p,{children:"Yazi can be used as a file picker to browse and open file(s) in your current Helix instance (running in a Zellij session)."}),"\n",(0,r.jsxs)(n.p,{children:["Add a keymap to your Helix config, for example ",(0,r.jsx)("kbd",{children:"Ctrl"})," + ",(0,r.jsx)("kbd",{children:"y"}),":"]}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"helix-stable",label:"Helix <= 25.01.1",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'# ~/.config/helix/config.toml\n[keys.normal]\nC-y = ":sh zellij run -n Yazi -c -f -x 10% -y 10% --width 80% --height 80% -- bash ~/.config/helix/yazi-picker.sh open"\n'})})}),(0,r.jsx)(l.A,{value:"helix-nightly",label:"Helix Nightly (> 25.01.1)",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'# ~/.config/helix/config.toml\n[keys.normal]\nC-y = ":sh zellij run -n Yazi -c -f -x 10%% -y 10%% --width 80%% --height 80%% -- bash ~/.config/helix/yazi-picker.sh open %{buffer_name}"\n'})})})]}),"\n",(0,r.jsx)(n.p,{children:"If you also want the ability to open files in split panes, you can define additional keybindings:"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"helix-stable",label:"Helix <= 25.01.1",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'# ~/.config/helix/config.toml\n[keys.normal.C-y]\n# Open the file(s) in the current window\ny = ":sh zellij run -n Yazi -c -f -x 10% -y 10% --width 80% --height 80% -- bash ~/.config/helix/yazi-picker.sh open"\n# Open the file(s) in a vertical split\nv = ":sh zellij run -n Yazi -c -f -x 10% -y 10% --width 80% --height 80% -- bash ~/.config/helix/yazi-picker.sh vsplit"\n# Open the file(s) in a horizontal split\nh = ":sh zellij run -n Yazi -c -f -x 10% -y 10% --width 80% --height 80% -- bash ~/.config/helix/yazi-picker.sh hsplit"\n'})})}),(0,r.jsx)(l.A,{value:"helix-nightly",label:"Helix Nightly (> 25.01.1)",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'# ~/.config/helix/config.toml\n[keys.normal.C-y]\n# Open the file(s) in the current window\ny = ":sh zellij run -n Yazi -c -f -x 10%% -y 10%% --width 80%% --height 80%% -- bash ~/.config/helix/yazi-picker.sh open %{buffer_name}"\n# Open the file(s) in a vertical split\nv = ":sh zellij run -n Yazi -c -f -x 10%% -y 10%% --width 80%% --height 80%% -- bash ~/.config/helix/yazi-picker.sh vsplit %{buffer_name}"\n# Open the file(s) in a horizontal split\nh = ":sh zellij run -n Yazi -c -f -x 10%% -y 10%% --width 80%% --height 80%% -- bash ~/.config/helix/yazi-picker.sh hsplit %{buffer_name}"\n'})})})]}),"\n",(0,r.jsxs)(n.p,{children:["Then save the following script as ",(0,r.jsx)(n.code,{children:"~/.config/helix/yazi-picker.sh"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:'#!/usr/bin/env bash\n\npaths=$(yazi "$2" --chooser-file=/dev/stdout | while read -r; do printf "%q " "$REPLY"; done)\n\nif [[ -n "$paths" ]]; then\n\tzellij action toggle-floating-panes\n\tzellij action write 27 # send <Escape> key\n\tzellij action write-chars ":$1 $paths"\n\tzellij action write 13 # send <Enter> key\nelse\n\tzellij action toggle-floating-panes\nfi\n'})}),"\n",(0,r.jsx)(n.p,{children:"Note: this uses a floating window, but you should also be able to open a new pane to the side, or in place. Review the Zellij documentation for more info."}),"\n",(0,r.jsxs)(n.p,{children:["Original post: ",(0,r.jsx)(n.a,{href:"https://github.com/zellij-org/zellij/issues/3018#issuecomment-2086166900",children:"https://github.com/zellij-org/zellij/issues/3018#issuecomment-2086166900"}),", credits to ",(0,r.jsx)(n.a,{href:"https://github.com/rockboynton",children:"@rockboynton"}),", ",(0,r.jsx)(n.a,{href:"https://github.com/postsolar",children:"@postsolar"}),", ",(0,r.jsx)(n.a,{href:"https://github.com/TheAwiteb",children:"@TheAwiteb"})," and ",(0,r.jsx)(n.a,{href:"https://github.com/Dreaming-Codes",children:"@Dreaming-Codes"})," for sharing and polishing it!"]}),"\n",(0,r.jsxs)(i,{children:[(0,r.jsx)("summary",{children:"Demonstrate Helix+Zellij+Yazi workflow"}),(0,r.jsx)("video",{src:"https://github.com/helix-editor/helix/assets/17523360/a4dde9e0-96bf-42a4-b946-40cbee984e69",width:"100%",controls:!0,muted:!0})]}),"\n",(0,r.jsx)(n.h2,{id:"helix-with-tmux",children:"File tree picker in Helix with tmux"}),"\n",(0,r.jsx)(n.p,{children:"Yazi can be used as a file picker to browse and open file(s) in your current Helix instance (running in a tmux session)."}),"\n",(0,r.jsxs)(n.p,{children:["Add a keymap to your Helix config, for example ",(0,r.jsx)("kbd",{children:"Ctrl"})," + ",(0,r.jsx)("kbd",{children:"y"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:"# ~/.config/helix/config.toml\n[keys.normal]\nC-y = \":sh tmux new-window -n fx '~/.config/helix/yazi-picker.sh open'\"\n"})}),"\n",(0,r.jsx)(n.p,{children:"If you also want the ability to open files in split panes, you can define additional keybindings:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:"# ~/.config/helix/config.toml\n[keys.normal.C-y]\n# Open file(s) in the current window\ny = \":sh tmux new-window -n fx '~/.config/helix/yazi-picker.sh open'\"\n# Open file(s) in a vertical split\nv = \":sh tmux new-window -n fx '~/.config/helix/yazi-picker.sh vsplit'\"\n# Open file(s) in a horizontal split\nh = \":sh tmux new-window -n fx '~/.config/helix/yazi-picker.sh hsplit'\"\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Then save the following script as ",(0,r.jsx)(n.code,{children:"~/.config/helix/yazi-picker.sh"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:'#!/usr/bin/env bash\n\npaths=$(yazi --chooser-file=/dev/stdout)\n\nif [[ -n "$paths" ]]; then\n\ttmux last-window\n\ttmux send-keys Escape\n\ttmux send-keys ":$1 $paths"\n\ttmux send-keys Enter\nelse\n\ttmux kill-window -t fx\nfi\n'})}),"\n",(0,r.jsx)(n.h2,{id:"email-selected-files",children:"Email selected files"}),"\n",(0,r.jsxs)(n.p,{children:["To send selected files using ",(0,r.jsx)(n.a,{href:"https://www.thunderbird.net",children:"Thunderbird"}),", with a keybinding ",(0,r.jsx)("kbd",{children:"Ctrl"})," + ",(0,r.jsx)("kbd",{children:"m"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:"# ~/.config/yazi/keymap.toml\n[[mgr.prepend_keymap]]\non  = \"<C-m>\"\nrun = '''shell --\n\tpaths=$(for p in \"$@\"; do echo \"$p\"; done | paste -s -d,)\n\tthunderbird -compose \"attachment='$paths'\"\n'''\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Or, use the ",(0,r.jsx)(n.a,{href:"https://neomutt.org",children:"NeoMutt"})," command-line mail client:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'# ~/.config/yazi/keymap.toml\n[[mgr.prepend_keymap]]\non  = "<C-m>"\nrun = \'shell --block -- neomutt -a "$@"\'\n'})}),"\n",(0,r.jsx)(n.h2,{id:"make-yazi-even-faster",children:"Make Yazi even faster than fast"}),"\n",(0,r.jsx)(n.p,{children:"While Yazi is already fast, there is still plenty of room for optimization for specific users or under certain conditions:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["For users who don't need image previews at all, disabling the default ",(0,r.jsx)(n.code,{children:"image"})," previewer and preloader will make Yazi faster by reducing the I/O read file and CPU decode image consumption."]}),"\n",(0,r.jsxs)(n.li,{children:["For users managing network files, it's recommended to ",(0,r.jsx)(n.a,{href:"/docs/tips#folder-previewer",children:"disable all previewers and preloaders"})," since previewing and preloading these files means they need to be downloaded locally."]}),"\n",(0,r.jsxs)(n.li,{children:["For low-spec devices like Raspberry Pi, ",(0,r.jsx)(n.a,{href:"/docs/configuration/yazi#tasks",children:"reducing the concurrency"})," will make Yazi faster since the default configuration is optimized for PCs, and high concurrency on these low-spec devices may have the opposite effect."]}),"\n",(0,r.jsxs)(n.li,{children:["For users who don't need accurate mime-type, ",(0,r.jsx)(n.a,{href:"https://github.com/yazi-rs/plugins/tree/main/mime-ext.yazi",children:(0,r.jsx)(n.code,{children:"mime-ext.yazi"})})," may be useful, as it simply returns mime-type based on file extensions, while Yazi defaults to obtaining mime-type based on file content for accuracy. Mime-type is used for matching opening, previewing, rendering rules. Encourage users to choose an appropriate ",(0,r.jsx)(n.code,{children:"mime"})," plugin based on their needs, which is why we decided to open it up to plugin developers."]}),"\n",(0,r.jsxs)(n.li,{children:["For high-performance terminal emulators, lowering the ",(0,r.jsxs)(n.a,{href:"/docs/configuration/yazi/#preview.image_delay",children:[(0,r.jsx)(n.code,{children:"image_delay"})," option"]})," or setting it to 0 can reduce image preview latency."]}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},4633:(e,n,i)=>{i.d(n,{A:()=>k});var t=i(758),r=i(3526),s=i(6298),a=i(3033),l=i(5557),o=i(2959),d=i(162),c=i(1819),h=i(9347);function u(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:i}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return u(e).map((({props:{value:e,label:n,attributes:i,default:t}})=>({value:e,label:n,attributes:i,default:t})))}(i);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,i])}function m({value:e,tabValues:n}){return n.some((n=>n.value===e))}function x({queryString:e=!1,groupId:n}){const i=(0,l.W6)(),r=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,d.aZ)(r),(0,t.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(i.location.search);n.set(r,e),i.replace({...i.location,search:n.toString()})}),[r,i])]}function f(e){const{defaultValue:n,queryString:i=!1,groupId:r}=e,s=p(e),[a,l]=(0,t.useState)((()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!m({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const i=n.find((e=>e.default))??n[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:s}))),[d,c]=x({queryString:i,groupId:r}),[u,f]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[i,r]=(0,h.Dv)(n);return[i,(0,t.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:r}),g=(()=>{const e=d??u;return m({value:e,tabValues:s})?e:null})();(0,o.A)((()=>{g&&l(g)}),[g]);return{selectedValue:a,selectValue:(0,t.useCallback)((e=>{if(!m({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),c(e),f(e)}),[c,f,s]),tabValues:s}}var g=i(2909);const y={tabList:"tabList_jhW_",tabItem:"tabItem_zJ9h"};var j=i(6070);function b({className:e,block:n,selectedValue:i,selectValue:t,tabValues:s}){const l=[],{blockElementScrollPositionUntilNextRender:o}=(0,a.a_)(),d=e=>{const n=e.currentTarget,r=l.indexOf(n),a=s[r].value;a!==i&&(o(n),t(a))},c=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const i=l.indexOf(e.currentTarget)+1;n=l[i]??l[0];break}case"ArrowLeft":{const i=l.indexOf(e.currentTarget)-1;n=l[i]??l[l.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},e),children:s.map((({value:e,label:n,attributes:t})=>(0,j.jsx)("li",{role:"tab",tabIndex:i===e?0:-1,"aria-selected":i===e,ref:e=>{l.push(e)},onKeyDown:c,onClick:d,...t,className:(0,r.A)("tabs__item",y.tabItem,t?.className,{"tabs__item--active":i===e}),children:n??e},e)))})}function v({lazy:e,children:n,selectedValue:i}){const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=s.find((e=>e.props.value===i));return e?(0,t.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function w(e){const n=f(e);return(0,j.jsxs)("div",{className:(0,r.A)(s.G.tabs.container,"tabs-container",y.tabList),children:[(0,j.jsx)(b,{...n,...e}),(0,j.jsx)(v,{...n,...e})]})}function k(e){const n=(0,g.A)();return(0,j.jsx)(w,{...e,children:u(e.children)},String(n))}},6211:(e,n,i)=>{i.d(n,{A:()=>a});i(758);var t=i(3526);const r={tabItem:"tabItem_EVQD"};var s=i(6070);function a({children:e,hidden:n,className:i}){return(0,s.jsx)("div",{role:"tabpanel",className:(0,t.A)(r.tabItem,i),hidden:n,children:e})}},7082:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>l});var t=i(758);const r={},s=t.createContext(r);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);